---
title: "Prepare metatranscriptomics data"
author: "Shaman Narayanasamy"
editor: source
---
This script compiles the data before performing analyses.

## Read quantification information from HPC
```{r eval=FALSE}
quant_folder <-
  '/scratch/users/snarayanasamy/membrane_cleaning/output/metatranscriptomics/quantification/salmon/all'
  
sample_table <- 
  sprintf('ssh iris "ls %s"', quant_folder) %>% pipe() %>% 
  read_tsv(col_names = "folder") %>% 
  separate(folder, into = c("sample", "lane", "tmp"), sep = '_', remove = F) %>% 
  select(folder, sample, lane)
```

### Compile raw counts
```{r eval=FALSE}
## Raw counts
for (f in 1:nrow(sample_table)){
  sample_folder <- sample_table$folder[f] 
  sample_name <- sample_table$folder[f] %>% str_remove("_quant")
  print(sample_table$folder[f])

  if (f == 1) { 
    tmp <- 
      sprintf('ssh iris "cat %s"', paste(quant_folder, sample_folder, "quant.sf", sep = '/')) %>% 
      pipe() %>%  
      read_tsv() %>% 
      select(Name, Length, EffectiveLength, !!sample_name := NumReads)
  }
  else {
      tmp <- 
        sprintf('ssh iris "cat %s"', paste(quant_folder, sample_folder, "quant.sf", sep = '/')) %>%  
        pipe() %>%   
        read_tsv() %>%   
        select(Name, !!sample_name := NumReads) %>%  
        full_join(tmp, ., by = "Name")
  }
}

counts <-
  tmp %>% 
  separate(Name, into = c("Bakta_ID"), sep = '_', remove = F, extra = "drop") %>% 
  write_tsv("/Users/shaman.narayanasamy/Work/Data/KAUST/membrane_cleaning/metatranscriptomics_counts.tsv")

rm(tmp)
```

### Compile transcripts per million (TPM) normalised counts
```{r eval=FALSE}
## Transcripts per million (TPM) counts
for (f in 1:nrow(sample_table)){
  sample_folder <- sample_table$folder[f] 
  sample_name <- sample_table$folder[f] %>% str_remove("_quant")
  print(sample_table$folder[f])

  if (f == 1) { 
    tmp <- 
      sprintf('ssh iris "cat %s"', paste(quant_folder, sample_folder, "quant.sf", sep = '/')) %>% 
      pipe() %>%  
      read_tsv() %>% 
      select(Name, Length, EffectiveLength, !!sample_name := TPM)
  }
  else {
      tmp <- 
        sprintf('ssh iris "cat %s"', paste(quant_folder, sample_folder, "quant.sf", sep = '/')) %>%  
        pipe() %>%   
        read_tsv() %>%   
        select(Name, !!sample_name := TPM) %>%  
        full_join(tmp, ., by = "Name")
  }
}

tpm_counts <-
  tmp %>% 
  separate(Name, into = c("Bakta_ID"), sep = '_', remove = F, extra = "drop") %>% 
  write_tsv("/Users/shaman.narayanasamy/Work/Data/KAUST/membrane_cleaning/metatranscriptomics_TPM_counts.tsv")

rm(tmp)

```
